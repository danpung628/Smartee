package com.example.smartee.viewmodel

import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import com.example.smartee.model.UserData
import com.example.smartee.repository.UserRepository
import com.google.firebase.auth.FirebaseAuth

class UserViewModel(
    private val userRepository: UserRepository,
    private val auth: FirebaseAuth
) : ViewModel() {

    private val _userData = MutableLiveData<UserData>()
    val userData: LiveData<UserData> = _userData

    init {
        // üî• Ïù¥Í±∞ Ï∂îÍ∞Ä: ViewModel ÏÉùÏÑ±Îê† Îïå Ïú†Ï†Ä ÌîÑÎ°úÌïÑ Î°úÎìú
        loadUserProfile()
    }

    private fun loadUserProfile() {
        val currentUser = auth.currentUser ?: return

        userRepository.getUserProfile(currentUser.uid)
            .addOnSuccessListener { document ->
                if (document != null && document.exists()) {
                    // [ÏàòÏ†ï] toObject() Ìò∏Ï∂ú Ïãú Î∞úÏÉùÌï† Ïàò ÏûàÎäî ÏòàÏô∏Î•º Ïû°ÏäµÎãàÎã§.
                    try {
                        _userData.value = document.toObject(UserData::class.java)
                        android.util.Log.d("UserViewModel", "‚úÖ ÌîÑÎ°úÌïÑ Î°úÎî© ÏÑ±Í≥µ: ${_userData.value?.nickname}")
                    } catch (e: Exception) {
                        // Í∞ùÏ≤¥ Î≥ÄÌôò Ïã§Ìå® Ïãú Î°úÍ∑∏Î•º ÎÇ®ÍπÅÎãàÎã§.
                        android.util.Log.e("UserViewModel", "‚ùå UserData Í∞ùÏ≤¥ Î≥ÄÌôò Ïã§Ìå®", e)
                    }
                } else {
                    android.util.Log.w("UserViewModel", "‚ö†Ô∏è ÏÇ¨Ïö©Ïûê ÌîÑÎ°úÌïÑ Î¨∏ÏÑúÍ∞Ä Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏùå")
                }
            }
            // [Ï∂îÍ∞Ä] FirestoreÏóêÏÑú Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî Í≤É ÏûêÏ≤¥Î•º Ïã§Ìå®ÌñàÏùÑ Îïå Î°úÍ∑∏Î•º ÎÇ®ÍπÅÎãàÎã§.
            .addOnFailureListener { e ->
                android.util.Log.e("UserViewModel", "‚ùå Firestore Î¨∏ÏÑú Í∞ÄÏ†∏Ïò§Í∏∞ Ïã§Ìå®", e)
            }
    }
}

class UserViewModelFactory(application: android.app.Application) : ViewModelProvider.Factory {
    override fun <T : ViewModel> create(modelClass: Class<T>): T {
        if (modelClass.isAssignableFrom(UserViewModel::class.java)) {
            val userRepository = UserRepository(com.google.firebase.firestore.FirebaseFirestore.getInstance())
            val auth = FirebaseAuth.getInstance()
            @Suppress("UNCHECKED_CAST")
            return UserViewModel(userRepository, auth) as T
        }
        throw IllegalArgumentException("Unknown ViewModel class")
    }
}